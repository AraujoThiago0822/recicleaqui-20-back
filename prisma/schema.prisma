// --- Prisma Schema ---

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

enum ClientType {
  individual
  company
}

model User {
  id                    Int       @id(map: "users_pk") @default(autoincrement())
  email                 String    @unique(map: "users_unique") @db.VarChar
  password              String    @db.VarChar
  createdAt             DateTime  @default(now()) @db.Timestamp(6)
  editedAt              DateTime? @db.Timestamp(6)
  resetToken            String?   @db.VarChar
  resetTokenGeneratedAt DateTime? @db.Timestamp(6)
  Client                Client?
}

model Client {
  id         Int         @id(map: "clients_pk") @default(autoincrement())
  type       ClientType
  phone      String      @db.VarChar
  userId     Int         @unique(map: "clients_users_id_key")
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "clients_users_id_fkey")
  individual Individual?
  company    Company?
  address    Address?
  createdAt  DateTime    @default(now()) @db.Timestamp(6)
  editedAt   DateTime?   @db.Timestamp(6)
}

model Individual {
  id        Int       @id(map: "individuals_pk") @default(autoincrement())
  firstName String    @db.VarChar
  lastName  String    @db.VarChar
  cpf       String    @unique(map: "individuals_unique") @db.VarChar
  clientId  Int       @unique(map: "individuals_clients_id_key")
  client    Client    @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "individuals_clients_id_fkey")
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  editedAt  DateTime? @db.Timestamp(6)
}

model Company {
  id          Int       @id(map: "companies_pk") @default(autoincrement())
  companyName String    @db.VarChar
  tradeName   String    @db.VarChar
  cnpj        String    @unique(map: "companies_unique") @db.VarChar
  clientId    Int       @unique(map: "companies_clients_id_key")
  client      Client    @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "companies_clients_id_fkey")
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  editedAt    DateTime? @db.Timestamp(6)
}

model Address {
  id         Int    @id(map: "addresses_pk") @default(autoincrement())
  addressType String @db.VarChar()
  addressName String @db.VarChar()
  number     String @db.VarChar()
  additionalInfo String? @db.VarChar()
  neighborhood String @db.VarChar()
  postalCode String @db.VarChar()
  city       String @db.VarChar()
  state      String @db.VarChar()
  clientId   Int    @unique(map: "addresses_clients_id_key")
  client     Client @relation(fields: [clientId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "addresses_clients_id_fkey")
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  editedAt   DateTime? @db.Timestamp(6)
}
